{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import*as d3 from'd3';import data from\"../BandwidthHighRiskBlock.csv\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var PhoneDetails=function PhoneDetails(_ref){var phoneDetails=_ref.phoneDetails;var _useState=useState('High'),_useState2=_slicedToArray(_useState,2),test=_useState2[0],setTest=_useState2[1];function ProcessCsv(props){//var test = \"High\";\n// d3.csv(data).then(function(data) {\n//     data.some(function(d) {  \n//         //console.log(\"+\" + d.Prefix);\n//         if (props.number.includes(\"17754\")) {\n//             break;\n//         }\n//         else {\n//             test = \"None\";\n//         }\n//     });\n// });\nd3.csv(data).then(function(data){var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var d=_step.value;if(props.number.includes(\"+\"+d.Prefix)){console.log(\"inside if\");break;}else{//console.log(\"inside else\");\nsetTest(\"None\");//console.log(\"inside else, test = \" + test);\n}//console.log(\"outside if/else, test = \" + test);\n}}catch(err){_iterator.e(err);}finally{_iterator.f();}console.log(\"inside for, test = \"+test);//test3 = test;\n});console.log(\"outside loop, test3 = \"+test);if(test===\"High\"){console.log(\"inside if2,  test = \"+test);return/*#__PURE__*/_jsxs(\"p\",{children:[\"Bandwidth High Risk if: \",test]});}else{console.log(\"inside else2,  test = \"+test);return/*#__PURE__*/_jsxs(\"p\",{children:[\"Bandwidth High Risk else: \",test]});}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Number Info\"})}),phoneDetails.map(function(phoneDetail){return/*#__PURE__*/_jsx(\"div\",{class:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Number: \",phoneDetail.number]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Local format: \",phoneDetail.local_format]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"International format: \",phoneDetail.international_format]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Country prefix: \",phoneDetail.country_prefix]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Country code: \",phoneDetail.country_code]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Country name: \",phoneDetail.country_name]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Location: \",phoneDetail.location]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Carrier: \",phoneDetail.carrier]}),/*#__PURE__*/_jsxs(\"p\",{class:\"card-text\",children:[\"Line type: \",phoneDetail.line_type]}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(ProcessCsv,{number:phoneDetail.international_format.toString()}),\" \"]})]})});})]},\"index\");};export default PhoneDetails;","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js"],"names":["React","useState","d3","data","PhoneDetails","phoneDetails","test","setTest","ProcessCsv","props","csv","then","d","number","includes","Prefix","console","log","map","phoneDetail","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString"],"mappings":"sWAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,IAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,+BAAjB,C,wFACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAsB,IAAnBC,CAAAA,YAAmB,MAAnBA,YAAmB,CAEvC,cAAwBJ,QAAQ,CAAC,MAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,EAAE,CAACQ,GAAH,CAAOP,IAAP,EAAaQ,IAAb,CAAkB,SAASR,IAAT,CAAe,0CACfA,IADe,YAC7B,+CAAoB,IAAXS,CAAAA,CAAW,aAChB,GAAIH,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsB,IAAMF,CAAC,CAACG,MAA9B,CAAJ,CAA2C,CACvCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACA,MACH,CAHD,IAIK,CACD;AACAV,OAAO,CAAC,MAAD,CAAP,CACA;AACH,CACD;AACH,CAZ4B,qDAa7BS,OAAO,CAACC,GAAR,CAAY,sBAAwBX,IAApC,EACA;AACH,CAfD,EAgBAU,OAAO,CAACC,GAAR,CAAY,yBAA2BX,IAAvC,EACA,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACjBU,OAAO,CAACC,GAAR,CAAY,uBAAyBX,IAArC,EACA,mBAAO,gDAA4BA,IAA5B,GAAP,CACH,CAHD,IAIK,CACDU,OAAO,CAACC,GAAR,CAAY,yBAA2BX,IAAvC,EACA,mBAAO,kDAA8BA,IAA9B,GAAP,CACH,CACJ,CACD,mBACI,oCACI,qCAAQ,mCAAR,EADJ,CAEKD,YAAY,CAACa,GAAb,CAAiB,SAACC,WAAD,qBAClB,YAAK,KAAK,CAAC,MAAX,uBACI,aAAK,KAAK,CAAC,WAAX,wBACA,WAAG,KAAK,CAAC,WAAT,sBAA8BA,WAAW,CAACN,MAA1C,GADA,cAEA,WAAG,KAAK,CAAC,WAAT,4BAAoCM,WAAW,CAACC,YAAhD,GAFA,cAGA,WAAG,KAAK,CAAC,WAAT,oCAA4CD,WAAW,CAACE,oBAAxD,GAHA,cAIA,WAAG,KAAK,CAAC,WAAT,8BAAsCF,WAAW,CAACG,cAAlD,GAJA,cAKA,WAAG,KAAK,CAAC,WAAT,4BAAoCH,WAAW,CAACI,YAAhD,GALA,cAMA,WAAG,KAAK,CAAC,WAAT,4BAAoCJ,WAAW,CAACK,YAAhD,GANA,cAOA,WAAG,KAAK,CAAC,WAAT,wBAAgCL,WAAW,CAACM,QAA5C,GAPA,cAQA,WAAG,KAAK,CAAC,WAAT,uBAA+BN,WAAW,CAACO,OAA3C,GARA,cASA,WAAG,KAAK,CAAC,WAAT,yBAAiCP,WAAW,CAACQ,SAA7C,GATA,cAYA,wCAAM,KAAC,UAAD,EAAY,MAAM,CAAER,WAAW,CAACE,oBAAZ,CAAiCO,QAAjC,EAApB,EAAN,OAZA,GADJ,EADkB,EAAjB,CAFL,GAAS,OAAT,CADJ,CAuBH,CAlED,CAoEA,cAAexB,CAAAA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nconst PhoneDetails = ({ phoneDetails }) => {\n\n    const [test, setTest] = useState('High')\n\n    function ProcessCsv(props) {\n        //var test = \"High\";\n        // d3.csv(data).then(function(data) {\n        //     data.some(function(d) {  \n        //         //console.log(\"+\" + d.Prefix);\n        //         if (props.number.includes(\"17754\")) {\n        //             break;\n        //         }\n        //         else {\n        //             test = \"None\";\n        //         }\n        //     });\n        // });\n        d3.csv(data).then(function(data) {\n            for (let d of data) {\n                if (props.number.includes(\"+\" + d.Prefix)) {\n                    console.log(\"inside if\");\n                    break;\n                }\n                else {\n                    //console.log(\"inside else\");\n                    setTest(\"None\");\n                    //console.log(\"inside else, test = \" + test);\n                }\n                //console.log(\"outside if/else, test = \" + test);\n            }\n            console.log(\"inside for, test = \" + test);\n            //test3 = test;\n        });\n        console.log(\"outside loop, test3 = \" + test);\n        if (test === \"High\") {\n            console.log(\"inside if2,  test = \" + test);\n            return <p>Bandwidth High Risk if: {test}</p>;\n        }\n        else {\n            console.log(\"inside else2,  test = \" + test);\n            return <p>Bandwidth High Risk else: {test}</p>;\n        }\n    }\n    return (\n        <div key=\"index\">\n            <center><h1>Number Info</h1></center>\n            {phoneDetails.map((phoneDetail) => (\n            <div class=\"card\">\n                <div class=\"card-body\">\n                <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                {/* <p class=\"card-text\">Bandwidth High Risk Prefix: {processCsv(phoneDetail.international_format)}</p> */}\n                {/* <div> {processCsv(phoneDetail.international_format)} </div> */}\n                <div> <ProcessCsv number={phoneDetail.international_format.toString()}/> </div>\n                </div>\n            </div>\n            ))}\n        </div>\n    )\n};\n\nexport default PhoneDetails"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReturnDetails from './components/ReturnDetails';\nimport ReturnLocalDetails from './components/ReturnLocalDetails';\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport lite from \"./lite.csv\";\nimport background from \"./background-globe-animated.svg\";\nimport \"./App.css\"; //import SplitPane from 'react-split-pane'\n\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { Divider, Grid, Image, Segment } from 'semantic-ui-react'; // function App() {\n//   const [localPhone, setLocalPhone] = useState('')\n//   const [localPhoneDetails, setLocalPhoneDetails] = useState([])\n//   const [highRiskData, setHighRiskData] = useState([])\n//   const [liteData, setLiteData] = useState([])\n//   const [intlPhone, setIntlPhone] = useState('')\n//   const [intlPhoneDetails, setIntlPhoneDetails] = useState([])\n//   const [localLoading, setLocalLoading] = useState(true)\n//   const [intlLoading, setIntlLoading] = useState(true)\n//   useEffect(() => {\n//     d3.csv(data).then(function (dta) {\n//       setHighRiskData(dta)\n//     })\n//   }, [])\n//   useEffect(() => {\n//     d3.csv(lite).then(function (liteDta) {\n//       setLiteData(liteDta)\n//     })\n//   }, [])\n//   const handleLocalInput = (e) => {\n//     e.preventDefault()\n//     if (/\\D/g.test(e.target.value)) {\n//       e.target.value = e.target.value.replace(/\\D/g, '');\n//     }\n//     setLocalPhone(e.target.value)\n//   }\n//   const handleIntlInput = (e) => {\n//     e.preventDefault()\n//     if (/\\D/g.test(e.target.value)) {\n//       e.target.value = e.target.value.replace(/\\D/g, '');\n//     }\n//     setIntlPhone(e.target.value)\n//   }\n//   const toggleIntlButtonState = async (e) => {\n//     if (intlPhoneDetails) { setIntlPhoneDetails([]) }\n//     e.preventDefault()\n//     setIntlLoading(false);\n//     await fetch('https://karh5qw55m.execute-api.us-east-2.amazonaws.com/test/intlnumlookup?phone=' + intlPhone)\n//       .then(async response => response.json())\n//       .then((data) => {\n//         setIntlPhoneDetails(intlPhoneDetails => [...intlPhoneDetails, data])\n//       }\n//     )\n//     setIntlLoading(true);\n//   };\n//   const toggleLocalButtonState = async (e) => {\n//     if (localPhoneDetails) { setLocalPhoneDetails([]) }\n//     e.preventDefault()\n//     setLocalLoading(false);\n//     await fetch('https://0xi9lxezba.execute-api.us-east-2.amazonaws.com/test/tnlookup?number=' + localPhone)\n//       .then(async response => response.json())\n//       .then((data) => {\n//         setLocalPhoneDetails(localPhoneDetails => [...localPhoneDetails, data])\n//       }\n//       )\n//     setLocalLoading(true);\n//   };\n//   var rootStyle = {\n//     backgroundImage: `url(${background})`,\n//     color: 'white',\n//     height: '100vh',\n//     width: '100vw',\n//     backgroundSize: 'cover',\n//     backgroundRepeat: 'no-repeat',\n//     overflow: 'hidden',\n//     backgroundPosition: 'center',\n//     fontFamily: 'Overpass,sans-serif',\n//     textAlign: 'left'\n//   }\n//   return (\n//     <div className='App' style={rootStyle}>\n//       <center>\n//         <h1>TAC Lookup Tool</h1>\n//         <SplitPane split='vertical' minSize='50%' defaultSize='50%'>\n//           <div>\n//             {/* <h2 className=\"localTitle\">Local Number Search</h2> */}\n//             <h2>Local Number Search</h2>\n//             <div>\n//               <h5>Enter Local Phone Number: </h5>\n//               <input id = \"local\" className=\"InputBox\" value={localPhone} onChange={(e) => handleLocalInput(e)} placeholder=\"1XXXXXXXXXX\" />\n//               <button className=\"ClickMeButton\" onClick={(e) => toggleLocalButtonState(e)}> View Info! </button>\n//             </div>\n//             <div>\n//               <br></br>\n//             </div>\n//             <div>\n//               {localLoading ? <ReturnLocalDetails localPhoneDetails={localPhoneDetails} /> :\n//                 <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n//             </div>\n//           </div>\n//           <div>\n//             {/* <h2 className=\"intlTitle\">International Number Search</h2> */}\n//             <h2>International Number Search</h2>\n//             <div>\n//               <h5>Enter International Phone Number: </h5>\n//               <input className=\"InputBox\" value={intlPhone} onChange={(e) => handleIntlInput(e)} placeholder=\"44XXXXXXXXX\" />\n//               <button className=\"ClickMeButton\" onClick={(e) => toggleIntlButtonState(e)}> View Info! </button>\n//             </div>\n//             <div>\n//               <br></br>\n//             </div>\n//             <div>\n//               {intlLoading ? <ReturnDetails csv={highRiskData} intlPhoneDetails={intlPhoneDetails} liteCsv={liteData} /> :\n//                 <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n//             </div>\n//           </div>\n//         </SplitPane></center>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [localPhone, setLocalPhone] = useState('');\n  const [localPhoneDetails, setLocalPhoneDetails] = useState([]);\n  const [highRiskData, setHighRiskData] = useState([]);\n  const [liteData, setLiteData] = useState([]);\n  const [intlPhone, setIntlPhone] = useState('');\n  const [intlPhoneDetails, setIntlPhoneDetails] = useState([]);\n  const [localLoading, setLocalLoading] = useState(true);\n  const [intlLoading, setIntlLoading] = useState(true);\n  useEffect(() => {\n    d3.csv(data).then(function (dta) {\n      setHighRiskData(dta);\n    });\n  }, []);\n  useEffect(() => {\n    d3.csv(lite).then(function (liteDta) {\n      setLiteData(liteDta);\n    });\n  }, []);\n\n  const handleLocalInput = e => {\n    e.preventDefault();\n\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n\n    setLocalPhone(e.target.value);\n  };\n\n  const handleIntlInput = e => {\n    e.preventDefault();\n\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n\n    setIntlPhone(e.target.value);\n  };\n\n  const toggleIntlButtonState = async e => {\n    if (intlPhoneDetails) {\n      setIntlPhoneDetails([]);\n    }\n\n    e.preventDefault();\n    setIntlLoading(false);\n    await fetch('https://karh5qw55m.execute-api.us-east-2.amazonaws.com/test/intlnumlookup?phone=' + intlPhone).then(async response => response.json()).then(data => {\n      setIntlPhoneDetails(intlPhoneDetails => [...intlPhoneDetails, data]);\n    });\n    setIntlLoading(true);\n  };\n\n  const toggleLocalButtonState = async e => {\n    if (localPhoneDetails) {\n      setLocalPhoneDetails([]);\n    }\n\n    e.preventDefault();\n    setLocalLoading(false);\n    await fetch('https://0xi9lxezba.execute-api.us-east-2.amazonaws.com/test/tnlookup?number=' + localPhone).then(async response => response.json()).then(data => {\n      setLocalPhoneDetails(localPhoneDetails => [...localPhoneDetails, data]);\n    });\n    setLocalLoading(true);\n  };\n\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: rootStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TAC Lookup Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        columns: 3,\n        relaxed: \"very\",\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"IP Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"International Number Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Local Number Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        vertical: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/KAnHg2pmL9qZf95tPrCNbG97pU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js"],"names":["React","useState","useEffect","ReturnDetails","ReturnLocalDetails","d3","data","lite","ReactBootStrap","Divider","Grid","Image","Segment","App","localPhone","setLocalPhone","localPhoneDetails","setLocalPhoneDetails","highRiskData","setHighRiskData","liteData","setLiteData","intlPhone","setIntlPhone","intlPhoneDetails","setIntlPhoneDetails","localLoading","setLocalLoading","intlLoading","setIntlLoading","csv","then","dta","liteDta","handleLocalInput","e","preventDefault","test","target","value","replace","handleIntlInput","toggleIntlButtonState","fetch","response","json","toggleLocalButtonState","rootStyle","backgroundImage","background","color","height","width","backgroundSize","backgroundRepeat","overflow","backgroundPosition","fontFamily","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,OAAO,WAAP,C,CACA;;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,me;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,EAAE,CAACyB,GAAH,CAAOxB,IAAP,EAAayB,IAAb,CAAkB,UAAUC,GAAV,EAAe;AAE/Bb,MAAAA,eAAe,CAACa,GAAD,CAAf;AAED,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA9B,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,EAAE,CAACyB,GAAH,CAAOvB,IAAP,EAAawB,IAAb,CAAkB,UAAUE,OAAV,EAAmB;AAEnCZ,MAAAA,WAAW,CAACY,OAAD,CAAX;AAED,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,MAAMC,IAAN,CAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAAJ,EAAgC;AAC9BJ,MAAAA,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiBJ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAjB;AACD;;AACDzB,IAAAA,aAAa,CAACoB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACD,GAND;;AAOA,QAAME,eAAe,GAAIN,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,MAAMC,IAAN,CAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAAJ,EAAgC;AAC9BJ,MAAAA,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiBJ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAjB;AACD;;AACDjB,IAAAA,YAAY,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAAZ;AACD,GAND;;AAOA,QAAMG,qBAAqB,GAAG,MAAOP,CAAP,IAAa;AACzC,QAAIX,gBAAJ,EAAsB;AAAEC,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AAAyB;;AACjDU,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA,UAAMc,KAAK,CAAC,qFAAqFrB,SAAtF,CAAL,CACHS,IADG,CACE,MAAMa,QAAN,IAAkBA,QAAQ,CAACC,IAAT,EADpB,EAEHd,IAFG,CAEGzB,IAAD,IAAU;AACdmB,MAAAA,mBAAmB,CAACD,gBAAgB,IAAI,CAAC,GAAGA,gBAAJ,EAAsBlB,IAAtB,CAArB,CAAnB;AACD,KAJG,CAAN;AAMAuB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAXD;;AAYA,QAAMiB,sBAAsB,GAAG,MAAOX,CAAP,IAAa;AAE1C,QAAInB,iBAAJ,EAAuB;AAAEC,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AAA0B;;AACnDkB,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,eAAe,CAAC,KAAD,CAAf;AACA,UAAMgB,KAAK,CAAC,iFAAiF7B,UAAlF,CAAL,CACHiB,IADG,CACE,MAAMa,QAAN,IAAkBA,QAAQ,CAACC,IAAT,EADpB,EAEHd,IAFG,CAEGzB,IAAD,IAAU;AACdW,MAAAA,oBAAoB,CAACD,iBAAiB,IAAI,CAAC,GAAGA,iBAAJ,EAAuBV,IAAvB,CAAtB,CAApB;AACD,KAJG,CAAN;AAMAqB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAZD;;AAaA,MAAIoB,SAAS,GAAG;AACdC,IAAAA,eAAe,EAAG,OAAMC,UAAW,GADrB;AAEdC,IAAAA,KAAK,EAAE,OAFO;AAGdC,IAAAA,MAAM,EAAE,OAHM;AAIdC,IAAAA,KAAK,EAAE,OAJO;AAKdC,IAAAA,cAAc,EAAE,OALF;AAMdC,IAAAA,gBAAgB,EAAE,WANJ;AAOdC,IAAAA,QAAQ,EAAE,QAPI;AAQdC,IAAAA,kBAAkB,EAAE,QARN;AASdC,IAAAA,UAAU,EAAE,qBATE;AAUdC,IAAAA,SAAS,EAAE;AAVG,GAAhB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAEX,SAA5B;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,OAAO,EAAC,MAA1B;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,OAAD;AAAS,QAAA,QAAQ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAvGQlC,G;;KAAAA,G;AAyGT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReturnDetails from './components/ReturnDetails';\nimport ReturnLocalDetails from './components/ReturnLocalDetails';\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport lite from \"./lite.csv\";\nimport background from \"./background-globe-animated.svg\"\nimport \"./App.css\";\n//import SplitPane from 'react-split-pane'\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { Divider, Grid, Image, Segment } from 'semantic-ui-react'\n\n// function App() {\n\n//   const [localPhone, setLocalPhone] = useState('')\n//   const [localPhoneDetails, setLocalPhoneDetails] = useState([])\n//   const [highRiskData, setHighRiskData] = useState([])\n//   const [liteData, setLiteData] = useState([])\n//   const [intlPhone, setIntlPhone] = useState('')\n//   const [intlPhoneDetails, setIntlPhoneDetails] = useState([])\n//   const [localLoading, setLocalLoading] = useState(true)\n//   const [intlLoading, setIntlLoading] = useState(true)\n\n//   useEffect(() => {\n//     d3.csv(data).then(function (dta) {\n\n//       setHighRiskData(dta)\n\n//     })\n//   }, [])\n\n//   useEffect(() => {\n//     d3.csv(lite).then(function (liteDta) {\n\n//       setLiteData(liteDta)\n\n//     })\n//   }, [])\n\n//   const handleLocalInput = (e) => {\n//     e.preventDefault()\n//     if (/\\D/g.test(e.target.value)) {\n//       e.target.value = e.target.value.replace(/\\D/g, '');\n//     }\n//     setLocalPhone(e.target.value)\n//   }\n//   const handleIntlInput = (e) => {\n//     e.preventDefault()\n//     if (/\\D/g.test(e.target.value)) {\n//       e.target.value = e.target.value.replace(/\\D/g, '');\n//     }\n//     setIntlPhone(e.target.value)\n//   }\n//   const toggleIntlButtonState = async (e) => {\n//     if (intlPhoneDetails) { setIntlPhoneDetails([]) }\n//     e.preventDefault()\n//     setIntlLoading(false);\n//     await fetch('https://karh5qw55m.execute-api.us-east-2.amazonaws.com/test/intlnumlookup?phone=' + intlPhone)\n//       .then(async response => response.json())\n//       .then((data) => {\n//         setIntlPhoneDetails(intlPhoneDetails => [...intlPhoneDetails, data])\n//       }\n//     )\n//     setIntlLoading(true);\n//   };\n//   const toggleLocalButtonState = async (e) => {\n\n//     if (localPhoneDetails) { setLocalPhoneDetails([]) }\n//     e.preventDefault()\n//     setLocalLoading(false);\n//     await fetch('https://0xi9lxezba.execute-api.us-east-2.amazonaws.com/test/tnlookup?number=' + localPhone)\n//       .then(async response => response.json())\n//       .then((data) => {\n//         setLocalPhoneDetails(localPhoneDetails => [...localPhoneDetails, data])\n//       }\n//       )\n//     setLocalLoading(true);\n//   };\n//   var rootStyle = {\n//     backgroundImage: `url(${background})`,\n//     color: 'white',\n//     height: '100vh',\n//     width: '100vw',\n//     backgroundSize: 'cover',\n//     backgroundRepeat: 'no-repeat',\n//     overflow: 'hidden',\n//     backgroundPosition: 'center',\n//     fontFamily: 'Overpass,sans-serif',\n//     textAlign: 'left'\n//   }\n\n//   return (\n//     <div className='App' style={rootStyle}>\n//       <center>\n//         <h1>TAC Lookup Tool</h1>\n//         <SplitPane split='vertical' minSize='50%' defaultSize='50%'>\n//           <div>\n//             {/* <h2 className=\"localTitle\">Local Number Search</h2> */}\n//             <h2>Local Number Search</h2>\n//             <div>\n//               <h5>Enter Local Phone Number: </h5>\n//               <input id = \"local\" className=\"InputBox\" value={localPhone} onChange={(e) => handleLocalInput(e)} placeholder=\"1XXXXXXXXXX\" />\n//               <button className=\"ClickMeButton\" onClick={(e) => toggleLocalButtonState(e)}> View Info! </button>\n//             </div>\n//             <div>\n//               <br></br>\n//             </div>\n//             <div>\n//               {localLoading ? <ReturnLocalDetails localPhoneDetails={localPhoneDetails} /> :\n//                 <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n//             </div>\n//           </div>\n//           <div>\n//             {/* <h2 className=\"intlTitle\">International Number Search</h2> */}\n//             <h2>International Number Search</h2>\n//             <div>\n//               <h5>Enter International Phone Number: </h5>\n//               <input className=\"InputBox\" value={intlPhone} onChange={(e) => handleIntlInput(e)} placeholder=\"44XXXXXXXXX\" />\n//               <button className=\"ClickMeButton\" onClick={(e) => toggleIntlButtonState(e)}> View Info! </button>\n//             </div>\n//             <div>\n//               <br></br>\n//             </div>\n//             <div>\n//               {intlLoading ? <ReturnDetails csv={highRiskData} intlPhoneDetails={intlPhoneDetails} liteCsv={liteData} /> :\n//                 <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n//             </div>\n//           </div>\n//         </SplitPane></center>\n//     </div>\n\n//   );\n\n// }\n\nfunction App() {\n\n  const [localPhone, setLocalPhone] = useState('')\n  const [localPhoneDetails, setLocalPhoneDetails] = useState([])\n  const [highRiskData, setHighRiskData] = useState([])\n  const [liteData, setLiteData] = useState([])\n  const [intlPhone, setIntlPhone] = useState('')\n  const [intlPhoneDetails, setIntlPhoneDetails] = useState([])\n  const [localLoading, setLocalLoading] = useState(true)\n  const [intlLoading, setIntlLoading] = useState(true)\n\n  useEffect(() => {\n    d3.csv(data).then(function (dta) {\n\n      setHighRiskData(dta)\n\n    })\n  }, [])\n\n  useEffect(() => {\n    d3.csv(lite).then(function (liteDta) {\n\n      setLiteData(liteDta)\n\n    })\n  }, [])\n\n  const handleLocalInput = (e) => {\n    e.preventDefault()\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n    setLocalPhone(e.target.value)\n  }\n  const handleIntlInput = (e) => {\n    e.preventDefault()\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n    setIntlPhone(e.target.value)\n  }\n  const toggleIntlButtonState = async (e) => {\n    if (intlPhoneDetails) { setIntlPhoneDetails([]) }\n    e.preventDefault()\n    setIntlLoading(false);\n    await fetch('https://karh5qw55m.execute-api.us-east-2.amazonaws.com/test/intlnumlookup?phone=' + intlPhone)\n      .then(async response => response.json())\n      .then((data) => {\n        setIntlPhoneDetails(intlPhoneDetails => [...intlPhoneDetails, data])\n      }\n      )\n    setIntlLoading(true);\n  };\n  const toggleLocalButtonState = async (e) => {\n\n    if (localPhoneDetails) { setLocalPhoneDetails([]) }\n    e.preventDefault()\n    setLocalLoading(false);\n    await fetch('https://0xi9lxezba.execute-api.us-east-2.amazonaws.com/test/tnlookup?number=' + localPhone)\n      .then(async response => response.json())\n      .then((data) => {\n        setLocalPhoneDetails(localPhoneDetails => [...localPhoneDetails, data])\n      }\n      )\n    setLocalLoading(true);\n  };\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left'\n  }\n\n  return (\n    <div className='App' style={rootStyle}>\n      <center>\n        <h1>TAC Lookup Tool</h1></center>\n      <Segment>\n        <Grid columns={3} relaxed='very'>\n          <Grid.Column>\n            <h2>IP Search</h2>\n\n          </Grid.Column>\n          <Grid.Column>\n            <h2>International Number Search</h2>\n          </Grid.Column>\n          <Grid.Column>\n            <h2>Local Number Search</h2>\n          </Grid.Column>\n        </Grid>\n        <Divider vertical></Divider>\n      </Segment>\n        {/* </SplitPane></center> */}\n    </div>\n\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
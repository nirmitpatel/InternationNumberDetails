{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/IpLookup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport background from \"../background-globe-animated.svg\";\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport './IpLookup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IpLookup() {\n  _s();\n\n  const [ipAddress, setIp] = useState('');\n  const [ipDetails, setIpDetails] = useState([]);\n  const [ipLoading, setIpLoading] = useState(true);\n\n  const handleIPInput = e => {\n    e.preventDefault(); // if (/\\D/g.test(e.target.value)) {\n    //   e.target.value = e.target.value.replace(/\\D/g, '');\n    // }\n\n    setIp(e.target.value);\n  };\n\n  const toggleIpButtonState = async e => {\n    if (ipDetails) {\n      setIpDetails([]);\n    }\n\n    e.preventDefault();\n    setIpLoading(false);\n    await fetch('https://ipapi.co/' + ipAddress + '/json/').then(async response => response.json()).then(data => {\n      setIpDetails(ipDetails => [...ipDetails, data]);\n    });\n    setIpLoading(true);\n  };\n\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: rootStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IpLookup, \"JCb3/mK5W/7Nxnk7lzR899qhAcg=\");\n\n_c = IpLookup;\nexport default IpLookup;\n\nvar _c;\n\n$RefreshReg$(_c, \"IpLookup\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/IpLookup.jsx"],"names":["React","useState","useEffect","ReactBootStrap","RemoveScrollBar","IpLookup","ipAddress","setIp","ipDetails","setIpDetails","ipLoading","setIpLoading","handleIPInput","e","preventDefault","target","value","toggleIpButtonState","fetch","then","response","json","data","rootStyle","backgroundImage","background","color","height","width","backgroundSize","backgroundRepeat","overflow","backgroundPosition","fontFamily","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,KAAZ,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;AACA;AACA;;AACAP,IAAAA,KAAK,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAL;AACD,GAND;;AAQA,QAAMC,mBAAmB,GAAG,MAAOJ,CAAP,IAAa;AACvC,QAAIL,SAAJ,EAAe;AAAEC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AAAkB;;AACnCI,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,UAAMO,KAAK,CAAC,sBAAsBZ,SAAtB,GAAkC,QAAnC,CAAL,CACHa,IADG,CACE,MAAMC,QAAN,IAAkBA,QAAQ,CAACC,IAAT,EADpB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACdb,MAAAA,YAAY,CAACD,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAec,IAAf,CAAd,CAAZ;AACD,KAJG,CAAN;AAMAX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAXD;;AAYA,MAAIY,SAAS,GAAG;AACdC,IAAAA,eAAe,EAAG,OAAMC,UAAW,GADrB;AAEdC,IAAAA,KAAK,EAAE,OAFO;AAGdC,IAAAA,MAAM,EAAE,OAHM;AAIdC,IAAAA,KAAK,EAAE,OAJO;AAKdC,IAAAA,cAAc,EAAE,OALF;AAMdC,IAAAA,gBAAgB,EAAE,WANJ;AAOdC,IAAAA,QAAQ,EAAE,QAPI;AAQdC,IAAAA,kBAAkB,EAAE,QARN;AASdC,IAAAA,UAAU,EAAE,qBATE;AAUdC,IAAAA,SAAS,EAAE;AAVG,GAAhB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAEX;AAA5B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3CQlB,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport background from \"../background-globe-animated.svg\";\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport './IpLookup.css'\n\nfunction IpLookup() {\n  const [ipAddress, setIp] = useState('')\n  const [ipDetails, setIpDetails] = useState([])\n  const [ipLoading, setIpLoading] = useState(true)\n\n  const handleIPInput = (e) => {\n    e.preventDefault()\n    // if (/\\D/g.test(e.target.value)) {\n    //   e.target.value = e.target.value.replace(/\\D/g, '');\n    // }\n    setIp(e.target.value)\n  }\n\n  const toggleIpButtonState = async (e) => {\n    if (ipDetails) { setIpDetails([]) }\n    e.preventDefault()\n    setIpLoading(false);\n    await fetch('https://ipapi.co/' + ipAddress + '/json/')\n      .then(async response => response.json())\n      .then((data) => {\n        setIpDetails(ipDetails => [...ipDetails, data])\n      }\n      )\n    setIpLoading(true);\n  };\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left'\n  }\n\n  return (\n    <div className='App' style={rootStyle}>\n      \n    </div>\n  );\n}\n\nexport default IpLookup;"]},"metadata":{},"sourceType":"module"}
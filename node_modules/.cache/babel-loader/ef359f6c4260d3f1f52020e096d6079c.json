{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SidebarParent = styled.div`\n  background: #cf3d2a;\n  width: 250px;\n  height: 100vh;\n`;\n_c = SidebarParent;\nconst SidebarItem = styled.div`\n  padding: 16px 24px;\n  transition: all 0.25s ease-in-out;\n  //Change the background color if 'active' prop is received\n  background: ${props => props.active ? \"#b15b00\" : \"\"};\n  margin: 4px 12px;\n  border-radius: 4px;\n\n  p {\n    color: white;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  &:hover {\n    cursor:pointer;\n  }\n  \n  &:hover:not(:first-child) {\n    background: #c34a36;\n  }\n`;\n_c2 = SidebarItem;\n\nfunction Sidebar({\n  defaultActive\n}) {\n  _s();\n\n  //If no active prop is passed, use `1` instead\n  const [activeIndex, setActiveIndex] = useState(defaultActive || 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SidebarParent, {\n      children: SidebarItems.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(SidebarItem, {\n          active: index === activeIndex,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Sidebar, \"E9j+PEjtyFJhX+2hXBM0Jc+xNzU=\");\n\n_c3 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SidebarParent\");\n$RefreshReg$(_c2, \"SidebarItem\");\n$RefreshReg$(_c3, \"Sidebar\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/Sidebar.jsx"],"names":["React","useState","useEffect","styled","SidebarParent","div","SidebarItem","props","active","Sidebar","defaultActive","activeIndex","setActiveIndex","SidebarItems","map","item","index","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;AACjC;AACA;AACA;AACA,CAJA;KAAMD,a;AAMN,MAAME,WAAW,GAAGH,MAAM,CAACE,GAAI;AAC/B;AACA;AACA;AACA,gBAAgBE,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,SAAf,GAA2B,EAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;MAAMF,W;;AAuBN,SAASG,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAoC;AAAA;;AAChC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACS,aAAa,IAAI,CAAlB,CAA9C;AACA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAA,gBAEQG,YAAY,CAACC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,4BACI,QAAC,WAAD;AAA6B,UAAA,MAAM,EAAEA,KAAK,KAAKL,WAA/C;AAAA,iCACI;AAAA,sBAAII,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ,WAAkBF,IAAI,CAACE,IAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAND;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;;GAlBQR,O;;MAAAA,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nconst SidebarParent = styled.div`\n  background: #cf3d2a;\n  width: 250px;\n  height: 100vh;\n`;\n\nconst SidebarItem = styled.div`\n  padding: 16px 24px;\n  transition: all 0.25s ease-in-out;\n  //Change the background color if 'active' prop is received\n  background: ${props => props.active ? \"#b15b00\" : \"\"};\n  margin: 4px 12px;\n  border-radius: 4px;\n\n  p {\n    color: white;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  &:hover {\n    cursor:pointer;\n  }\n  \n  &:hover:not(:first-child) {\n    background: #c34a36;\n  }\n`;\n\nfunction Sidebar({ defaultActive }) {\n    //If no active prop is passed, use `1` instead\n    const [activeIndex, setActiveIndex] = useState(defaultActive || 1);\n    return (\n        <>\n            <SidebarParent>\n                {\n                    SidebarItems.map((item, index) => {\n                        return (\n                            <SidebarItem key={item.name} active={index === activeIndex}>\n                                <p>{item.name}</p>\n                            </SidebarItem>\n                        );\n                    })\n                }\n            </SidebarParent>\n        </>\n    );\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}
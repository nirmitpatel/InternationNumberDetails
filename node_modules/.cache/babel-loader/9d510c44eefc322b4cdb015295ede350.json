{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from 'react';\n// import * as d3 from 'd3';\n// //import data from \"../BandwidthHighRiskBlock.csv\";\n// import data from \"../test.csv\";\n// const PhoneDetails = ({ phoneDetails }) => {\n//     const [test, setTest] = useState('Ehh')\n//     const [count, setCount] = useState(0)\n//     function ProcessCsv(props) {\n//         //var test = \"High\";\n//         // d3.csv(data).then(function(data) {\n//         //     data.some(function(d) {  \n//         //         //console.log(\"+\" + d.Prefix);\n//         //         if (props.number.includes(\"17754\")) {\n//         //             break;\n//         //         }\n//         //         else {\n//         //             test = \"None\";\n//         //         }\n//         //     });\n//         // });\n//         d3.csv(data).then(function(data) {\n//             setCount(count + 1)\n//             for (let d of data) {\n//                 if (props.number.includes(\"+\" + d.Prefix)) {\n//                     console.log(\"inside if\");\n//                     setTest(\"High\");\n//                     break;\n//                 }\n//                 else {\n//                     //console.log(\"inside else\");\n//                     setTest(\"None\");\n//                     //console.log(\"inside else, test = \" + test);\n//                 }\n//                 //console.log(\"outside if/else, test = \" + test);\n//             }\n//             console.log(\"inside for, test = \" + test);\n//             //test3 = test;\n//         });\n//         console.log(\"outside loop, test3 = \" + test);\n//         if (test === \"High\") {\n//             console.log(\"inside if2,  test = \" + test);\n//             return <p>Bandwidth High Risk if: {test + \" \" + count}</p>;\n//         }\n//         else {\n//             console.log(\"inside else2,  test = \" + test);\n//             return <p>Bandwidth High Risk else: {test + \" \" + count}</p>;\n//         }\n//     }\n//     return (\n//         <div key=\"index\">\n//             <center><h1>Number Info</h1></center>\n//             {phoneDetails.map((phoneDetail) => (\n//             <div class=\"card\">\n//                 <div class=\"card-body\">\n//                 <p class=\"card-text\">Number: {phoneDetail.number}</p>\n//                 <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n//                 <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n//                 <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n//                 <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n//                 <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n//                 <p class=\"card-text\">Location: {phoneDetail.location}</p>\n//                 <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n//                 <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n//                 {/* <p class=\"card-text\">Bandwidth High Risk Prefix: {processCsv(phoneDetail.international_format)}</p> */}\n//                 {/* <div> {processCsv(phoneDetail.international_format)} </div> */}\n//                 <div> <ProcessCsv number={phoneDetail.international_format.toString()}/> </div>\n//                 </div>\n//             </div>\n//             ))}\n//         </div>\n//     )\n// };\n// export default PhoneDetails\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3'; //import data from \"../BandwidthHighRiskBlock.csv\";\n\nimport data from \"../test.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneDetails = props => {\n  _s();\n\n  const [test, setTest] = useState('Ehh');\n  const [count, setCount] = useState(0);\n  const {\n    phoneDetails\n  } = props;\n\n  const ProcessCsv = prop => {\n    console.log('process');\n    d3.csv(data).then(function (data) {\n      console.log('in d3');\n\n      for (let d of data) {\n        if (prop.includes(\"+\" + d.Prefix)) {\n          console.log('in if: ' + d.Prefix);\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bandwidth High Risk if: High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }, this); //setTest(\"High\");\n          //break;\n        } else {\n          console.log('in else'); //setTest(\"None\");\n        }\n      }\n    }); //return <p>Bandwidth High Risk else: None</p>;\n\n    /*if (test === \"High\") {\n        return <p>Bandwidth High Risk if: {test + \" \" + count}</p>;\n    }\n    else {\n        return <p>Bandwidth High Risk else: {test + \" \" + count}</p>;\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Number Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), props.phoneDetails ? props.phoneDetails.map(phoneDetail => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Number: \", phoneDetail.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Local format: \", phoneDetail.local_format]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"International format: \", phoneDetail.international_format]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Country prefix: \", phoneDetail.country_prefix]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Country code: \", phoneDetail.country_code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Country name: \", phoneDetail.country_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Location: \", phoneDetail.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Carrier: \", phoneDetail.carrier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [\"Line type: \", phoneDetail.line_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", ProcessCsv(phoneDetail.international_format.toString())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)) : console.log('no map')]\n  }, \"index\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhoneDetails, \"X8ckXpuPwKosAiI2eA+hmNkMKsA=\");\n\n_c = PhoneDetails;\nexport default PhoneDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneDetails\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js"],"names":["React","useState","useEffect","d3","data","PhoneDetails","props","test","setTest","count","setCount","phoneDetails","ProcessCsv","prop","console","log","csv","then","d","includes","Prefix","map","phoneDetail","number","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString"],"mappings":"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","sourcesContent":["// import React, {useState} from 'react';\n// import * as d3 from 'd3';\n// //import data from \"../BandwidthHighRiskBlock.csv\";\n// import data from \"../test.csv\";\n\n\n// const PhoneDetails = ({ phoneDetails }) => {\n//     const [test, setTest] = useState('Ehh')\n//     const [count, setCount] = useState(0)\n\n//     function ProcessCsv(props) {\n//         //var test = \"High\";\n//         // d3.csv(data).then(function(data) {\n//         //     data.some(function(d) {  \n//         //         //console.log(\"+\" + d.Prefix);\n//         //         if (props.number.includes(\"17754\")) {\n//         //             break;\n//         //         }\n//         //         else {\n//         //             test = \"None\";\n//         //         }\n//         //     });\n//         // });\n//         d3.csv(data).then(function(data) {\n//             setCount(count + 1)\n//             for (let d of data) {\n//                 if (props.number.includes(\"+\" + d.Prefix)) {\n//                     console.log(\"inside if\");\n//                     setTest(\"High\");\n//                     break;\n//                 }\n//                 else {\n//                     //console.log(\"inside else\");\n//                     setTest(\"None\");\n//                     //console.log(\"inside else, test = \" + test);\n//                 }\n//                 //console.log(\"outside if/else, test = \" + test);\n//             }\n//             console.log(\"inside for, test = \" + test);\n//             //test3 = test;\n//         });\n//         console.log(\"outside loop, test3 = \" + test);\n//         if (test === \"High\") {\n//             console.log(\"inside if2,  test = \" + test);\n//             return <p>Bandwidth High Risk if: {test + \" \" + count}</p>;\n//         }\n//         else {\n//             console.log(\"inside else2,  test = \" + test);\n//             return <p>Bandwidth High Risk else: {test + \" \" + count}</p>;\n//         }\n//     }\n//     return (\n//         <div key=\"index\">\n//             <center><h1>Number Info</h1></center>\n//             {phoneDetails.map((phoneDetail) => (\n//             <div class=\"card\">\n//                 <div class=\"card-body\">\n//                 <p class=\"card-text\">Number: {phoneDetail.number}</p>\n//                 <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n//                 <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n//                 <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n//                 <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n//                 <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n//                 <p class=\"card-text\">Location: {phoneDetail.location}</p>\n//                 <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n//                 <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n//                 {/* <p class=\"card-text\">Bandwidth High Risk Prefix: {processCsv(phoneDetail.international_format)}</p> */}\n//                 {/* <div> {processCsv(phoneDetail.international_format)} </div> */}\n//                 <div> <ProcessCsv number={phoneDetail.international_format.toString()}/> </div>\n//                 </div>\n//             </div>\n//             ))}\n//         </div>\n//     )\n// };\n\n// export default PhoneDetails\n\nimport React, {useState, useEffect} from 'react';\nimport * as d3 from 'd3';\n//import data from \"../BandwidthHighRiskBlock.csv\";\nimport data from \"../test.csv\";\n\nconst PhoneDetails = (props) => {\n    const [test, setTest] = useState('Ehh')\n    const [count, setCount] = useState(0)\n    const {phoneDetails} = props\n    \n    const ProcessCsv = (prop) =>  {\n       console.log('process')\n     \n        d3.csv(data).then(function(data) {\n            console.log('in d3')\n            for (let d of data) {\n                if (prop.includes(\"+\" + d.Prefix)) {\n                    console.log('in if: ' + d.Prefix)\n                    return <p>Bandwidth High Risk if: High</p>;\n                    //setTest(\"High\");\n                    //break;\n                }\n                else {\n                    console.log('in else')\n                    //setTest(\"None\");\n                }\n            }\n           \n        });\n        //return <p>Bandwidth High Risk else: None</p>;\n        /*if (test === \"High\") {\n            return <p>Bandwidth High Risk if: {test + \" \" + count}</p>;\n        }\n        else {\n            return <p>Bandwidth High Risk else: {test + \" \" + count}</p>;\n        }*/\n    }\n    return (\n        <div key=\"index\">\n            <center><h1>Number Info</h1></center>\n            {props.phoneDetails ? props.phoneDetails.map((phoneDetail) => (\n            \n            <div class=\"card\">\n                <div class=\"card-body\">\n                <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                \n                 <div> {ProcessCsv(phoneDetail.international_format.toString())}</div> \n                \n                </div>\n            </div> \n            )) : console.log('no map')}\n    </div>\n            )\n};\n\n\nexport default PhoneDetails"]},"metadata":{},"sourceType":"module"}
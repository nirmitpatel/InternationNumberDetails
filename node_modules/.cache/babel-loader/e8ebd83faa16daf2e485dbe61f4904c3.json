{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet BwHighRiskPref;\n\nconst processCsv = phoneDetail => {\n  d3.csv(data).then(function (data) {\n    var test = \"\";\n    data.forEach(function (d) {\n      //console.log(d.Prefix)\n      if (phoneDetail.international_format.includes(\"+\" + d.Prefix)) {\n        test = \"High\";\n      }\n    });\n\n    if (test === \"High\") {\n      BwHighRiskPref = test;\n    } else {\n      BwHighRiskPref = \"None\";\n    }\n\n    return BwHighRiskPref; //firstRow = data[0].Prefix + \" \" + data[0].Country\n    //console.log(data[0].Prefix)\n  }).catch(function (err) {\n    throw err;\n  });\n};\n\nconst PhoneDetails = ({\n  phoneDetails\n}) => {\n  return (\n    /*#__PURE__*/\n    // <input type=\"text\" className=\"form-control\" ref={(c) => this.PhoneDetails = c} name=\"title\" />\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Number Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), phoneDetails.map(phoneDetail => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Number: \", phoneDetail.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Local format: \", phoneDetail.local_format]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"International format: \", phoneDetail.international_format]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country prefix: \", phoneDetail.country_prefix]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country code: \", phoneDetail.country_code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country name: \", phoneDetail.country_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Location: \", phoneDetail.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Carrier: \", phoneDetail.carrier]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Line type: \", phoneDetail.line_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Bandwidth High Risk Prefix: \", this.processCsv()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))]\n    }, \"index\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) // <pre>\n    //     {JSON.stringify(phoneDetails, null, 2)}\n    // </pre>\n\n  );\n};\n\n_c = PhoneDetails;\nexport default PhoneDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneDetails\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js"],"names":["React","d3","data","BwHighRiskPref","processCsv","phoneDetail","csv","then","test","forEach","d","international_format","includes","Prefix","catch","err","PhoneDetails","phoneDetails","map","number","local_format","country_prefix","country_code","country_name","location","carrier","line_type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nlet BwHighRiskPref;\n\nconst processCsv = (phoneDetail) => {\n    d3.csv(data).then(function(data) {\n        var test = \"\";\n        data.forEach(function(d) {  \n            //console.log(d.Prefix)\n            if (phoneDetail.international_format.includes(\"+\" + d.Prefix)) {\n                test = \"High\";\n            }\n        });\n        if (test === \"High\") {\n            BwHighRiskPref = test;\n        }\n        else {\n            BwHighRiskPref = \"None\";\n        }\n        return BwHighRiskPref;\n        //firstRow = data[0].Prefix + \" \" + data[0].Country\n        //console.log(data[0].Prefix)\n    }).catch(function(err) {\n         throw err;\n    });\n}\n\n\n\nconst PhoneDetails = ({ phoneDetails }) => {\n    return (\n        // <input type=\"text\" className=\"form-control\" ref={(c) => this.PhoneDetails = c} name=\"title\" />\n        <div key=\"index\">\n            <center><h1>Number Info</h1></center>\n            {phoneDetails.map((phoneDetail) => (\n            <div class=\"card\">\n                <div class=\"card-body\">\n                <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                <p class=\"card-text\">Bandwidth High Risk Prefix: {this.processCsv()}</p>\n                </div>\n            </div>\n            ))}\n        </div>\n\n    \n    // <pre>\n    //     {JSON.stringify(phoneDetails, null, 2)}\n    // </pre>\n    )\n};\n\nexport default PhoneDetails"]},"metadata":{},"sourceType":"module"}
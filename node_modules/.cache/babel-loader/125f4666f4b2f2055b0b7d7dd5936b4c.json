{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet BwHighRiskPref = \"test\";\nlet test2 = \"test\"; // const processCsv = (phoneDetail) => {\n//     d3.csv(data).then(function(data) {\n//         var test = \"\";\n//         data.forEach(function(d) {  \n//             //console.log(\"+\" + d.Prefix);\n//             if (phoneDetail.includes(\"+\" + d.Prefix)) {\n//                 test = \"High\";\n//             }\n//         });\n//         if (test === \"High\") {\n//             BwHighRiskPref = test;\n//         }\n//         else {\n//             BwHighRiskPref = \"None\";\n//         }\n//         console.log(\"BwHighRiskPref: \" + BwHighRiskPref);\n//         return <h1>Hello, {BwHighRiskPref}</h1>;\n//         //firstRow = data[0].Prefix + \" \" + data[0].Country\n//         //console.log(data[0].Prefix)\n//     }).catch(function(err) {\n//          throw err;\n//     });\n// }\n\nfunction ProcessCsv(props) {\n  d3.csv(data).then(function (data) {\n    data.forEach(function (d) {\n      //console.log(\"+\" + d.Prefix);\n      if (phoneDetail.includes(\"+\" + d.Prefix)) {\n        test = \"High\";\n      }\n    });\n  }).catch(function (err) {\n    throw err;\n  });\n\n  if (props.number.includes(\"17754\")) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"If, \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Else, \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_c = ProcessCsv;\n\nconst PhoneDetails = ({\n  phoneDetails\n}) => {\n  return (\n    /*#__PURE__*/\n    // <input type=\"text\" className=\"form-control\" ref={(c) => this.PhoneDetails = c} name=\"title\" />\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Number Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), phoneDetails.map(phoneDetail => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Number: \", phoneDetail.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Local format: \", phoneDetail.local_format]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"International format: \", phoneDetail.international_format]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country prefix: \", phoneDetail.country_prefix]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country code: \", phoneDetail.country_code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Country name: \", phoneDetail.country_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Location: \", phoneDetail.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Carrier: \", phoneDetail.carrier]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Line type: \", phoneDetail.line_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(ProcessCsv, {\n              number: phoneDetail.international_format.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Bandwidth High Risk Prefix 2: \", BwHighRiskPref]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: [\"Bandwidth High Risk Prefix 3: \", test2]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, \"index\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) // <pre>\n    //     {JSON.stringify(phoneDetails, null, 2)}\n    // </pre>\n\n  );\n};\n\n_c2 = PhoneDetails;\nexport default PhoneDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProcessCsv\");\n$RefreshReg$(_c2, \"PhoneDetails\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/components/phoneDetails.js"],"names":["React","d3","data","BwHighRiskPref","test2","ProcessCsv","props","csv","then","forEach","d","phoneDetail","includes","Prefix","test","catch","err","number","PhoneDetails","phoneDetails","map","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nlet BwHighRiskPref = \"test\";\nlet test2 = \"test\";\n\n// const processCsv = (phoneDetail) => {\n//     d3.csv(data).then(function(data) {\n//         var test = \"\";\n//         data.forEach(function(d) {  \n//             //console.log(\"+\" + d.Prefix);\n//             if (phoneDetail.includes(\"+\" + d.Prefix)) {\n//                 test = \"High\";\n//             }\n//         });\n//         if (test === \"High\") {\n//             BwHighRiskPref = test;\n//         }\n//         else {\n//             BwHighRiskPref = \"None\";\n//         }\n//         console.log(\"BwHighRiskPref: \" + BwHighRiskPref);\n//         return <h1>Hello, {BwHighRiskPref}</h1>;\n//         //firstRow = data[0].Prefix + \" \" + data[0].Country\n//         //console.log(data[0].Prefix)\n//     }).catch(function(err) {\n//          throw err;\n//     });\n// }\n    \nfunction ProcessCsv(props) {\n    d3.csv(data).then(function(data) {\n        data.forEach(function(d) {  \n                        //console.log(\"+\" + d.Prefix);\n                        if (phoneDetail.includes(\"+\" + d.Prefix)) {\n                            test = \"High\";\n                        }\n                    });\n    }).catch(function(err) {\n         throw err;\n    });\n\n    if (props.number.includes(\"17754\")) {\n        return <p>If, {props.number}</p>;\n    }\n    else {\n        return <p>Else, {props.number}</p>;\n    }\n}\n\n\n\nconst PhoneDetails = ({ phoneDetails }) => {\n    return (\n        // <input type=\"text\" className=\"form-control\" ref={(c) => this.PhoneDetails = c} name=\"title\" />\n        <div key=\"index\">\n            <center><h1>Number Info</h1></center>\n            {phoneDetails.map((phoneDetail) => (\n            <div class=\"card\">\n                <div class=\"card-body\">\n                <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                {/* <p class=\"card-text\">Bandwidth High Risk Prefix: {processCsv(phoneDetail.international_format)}</p> */}\n                {/* <div> {processCsv(phoneDetail.international_format)} </div> */}\n                <div> <ProcessCsv number={phoneDetail.international_format.toString()}/> </div>\n                <p class=\"card-text\">Bandwidth High Risk Prefix 2: {BwHighRiskPref}</p>\n                <p class=\"card-text\">Bandwidth High Risk Prefix 3: {test2}</p>\n                </div>\n            </div>\n            ))}\n        </div>\n\n    \n    // <pre>\n    //     {JSON.stringify(phoneDetails, null, 2)}\n    // </pre>\n    )\n};\n\nexport default PhoneDetails"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js\";\nimport React, { Component } from 'react';\nimport PhoneDetails from './components/phoneDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar NumberFormat = require('react-number-format');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phoneDetails: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://min-api.cryptocompare.com/data/all/coinlist').then(res => res.json()).then(data => {\n      this.setState({\n        phoneDetails: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const data = this.state.phoneDetails.data;\n    if (data == null) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: Object.keys(data).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"left\",\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: data[key].CoinName,\n            displayType: 'text',\n            decimalPrecision: 2,\n            thousandSeparator: true,\n            prefix: '$'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this) //<PhoneDetails phoneDetails={this.state.phoneDetails} />\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js"],"names":["React","Component","PhoneDetails","NumberFormat","require","App","state","phoneDetails","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render","Object","keys","map","key","CoinName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,YAAY,EAAE;AADR,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEM;AAAhB,OAAd;AACD,KAJD,EAMCE,KAND,CAMOC,OAAO,CAACC,GANf;AAOD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAML,IAAI,GAAG,KAAKP,KAAL,CAAWC,YAAX,CAAwBM,IAArC;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB,OAAO,IAAP;AAClB,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGM,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,GAAlB,CAAuBC,GAAD,iBACrB;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,iCAAwB,QAAC,YAAD;AAAc,YAAA,KAAK,EAAET,IAAI,CAACS,GAAD,CAAJ,CAAUC,QAA/B;AAAyC,YAAA,WAAW,EAAE,MAAtD;AAA8D,YAAA,gBAAgB,EAAE,CAAhF;AAAmF,YAAA,iBAAiB,EAAE,IAAtG;AAA4G,YAAA,MAAM,EAAE;AAApH;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,CASE;AATF;AAWD;;AA7ByB;;AAgC5B,eAAelB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport PhoneDetails from './components/phoneDetails';\nvar NumberFormat = require('react-number-format');\n\nclass App extends Component {\n  state = {\n    phoneDetails: []\n  }\n\n  componentDidMount() {\n    fetch('https://min-api.cryptocompare.com/data/all/coinlist')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ phoneDetails: data })\n    }\n    )\n    .catch(console.log)\n  }\n\n  render () {\n    const data = this.state.phoneDetails.data;\n    if (data == null) return null;\n    return (\n      <div className=\"App\">\n        {Object.keys(data).map((key) => (\n          <div className=\"container\">\n            <span className=\"left\">{key}</span>\n            <span className=\"right\"><NumberFormat value={data[key].CoinName} displayType={'text'} decimalPrecision={2} thousandSeparator={true} prefix={'$'} /></span>\n          </div>\n        ))}\n      </div>\n      //<PhoneDetails phoneDetails={this.state.phoneDetails} />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
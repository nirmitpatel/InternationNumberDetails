{"ast":null,"code":"var _jsxFileName = \"/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReturnDetails from './components/ReturnDetails'; //import useNumberDetails from './components/useNumberDetails';\n\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport lite from \"./lite.csv\";\nimport background from \"./background-globe-animated.svg\";\nimport \"./App.css\";\nimport SplitPane from 'react-split-pane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [phone, setPhone] = useState('');\n  const [phoneDetails, setPhoneDetails] = useState([]);\n  const [highRiskData, setHighRiskData] = useState([]);\n  const [liteData, setLiteData] = useState([]);\n  useEffect(() => {\n    d3.csv(data).then(function (dta) {\n      setHighRiskData(dta);\n    });\n  }, []);\n  useEffect(() => {\n    d3.csv(lite).then(function (liteDta) {\n      setLiteData(liteDta);\n    });\n  }, []);\n\n  const handleInput = e => {\n    e.preventDefault();\n    setPhone(e.target.value); //console.log(phone)\n  };\n\n  const toggleButtonState = async e => {\n    if (phoneDetails) {\n      setPhoneDetails([]);\n    }\n\n    e.preventDefault();\n    fetch('http://apilayer.net/api/validate?access_key=1fcc33e69f7fee637d15338c111fe68f&number=' + phone + '&country_code=&format=1').then(response => response.json()).then(data => {\n      setPhoneDetails(phoneDetails => [...phoneDetails, data]);\n      console.log('in the toggle fetch');\n    });\n  };\n\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left' //alignItems: 'left',\n\n  };\n  var splitScreen = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  var topPane = {\n    width: '50%'\n  };\n  var bottomPane = {\n    width: '50%'\n  };\n  return (\n    /*#__PURE__*/\n    // <div className={splitScreen}>\n    //   <div style={rootStyle}>\n    //     {/* <center> */}\n    //       <div>\n    //         <h1>Number Info</h1>\n    //         <div className={topPane}>\n    //             <h5>Enter Phone Number: </h5>\n    //             <input className = \"InputBox\" value = {phone} onChange = {(e) => handleInput(e)} /> \n    //             <button className = \"ClickMeButton\" onClick={(e) => toggleButtonState(e)}> View Info! </button>\n    //         </div>\n    //       </div>\n    //       <div>\n    //         <br></br>\n    //       </div>\n    //       <div>\n    //         <ReturnDetails  csv = {highRiskData} phoneDetails = {phoneDetails} liteCsv = {liteData}/> \n    //       </div>\n    //       <div className={bottomPane}>\n    //             <h5>Enter Local Phone Number: </h5>\n    //             <input className = \"InputBox\" value = {phone} onChange = {(e) => handleInput(e)} /> \n    //             <button className = \"ClickMeButton\" onClick={(e) => toggleButtonState(e)}> View Info! </button>\n    //         </div>\n    //     {/* </center> */}\n    //   </div>\n    // </div>,\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is my heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: 50,\n        defaultSize: 100,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"split 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"split 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"2fQKcZmwCiZM4ri2l/fR9dX2OSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/npatel-mbp/Desktop/IntNumLookup/react-api/src/App.js"],"names":["React","useState","useEffect","ReturnDetails","d3","data","lite","SplitPane","App","phone","setPhone","phoneDetails","setPhoneDetails","highRiskData","setHighRiskData","liteData","setLiteData","csv","then","dta","liteDta","handleInput","e","preventDefault","target","value","toggleButtonState","fetch","response","json","console","log","rootStyle","backgroundImage","background","color","height","width","backgroundSize","backgroundRepeat","overflow","backgroundPosition","fontFamily","textAlign","splitScreen","display","flexDirection","topPane","bottomPane"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport ReturnDetails from './components/ReturnDetails';\n//import useNumberDetails from './components/useNumberDetails';\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport lite from \"./lite.csv\";\nimport background from \"./background-globe-animated.svg\"\nimport \"./App.css\";\nimport SplitPane from 'react-split-pane'\n\nfunction App(){\n  \n  const [phone, setPhone]= useState('')\n  const [phoneDetails, setPhoneDetails] = useState([])\n  const [highRiskData, setHighRiskData] = useState([])\n  const [liteData, setLiteData] = useState([])\n\n  useEffect(()=> {\n    d3.csv(data).then(function(dta) {\n         \n      setHighRiskData(dta)\n     \n  })\n  },[])\n\n  useEffect(()=> {\n    d3.csv(lite).then(function(liteDta) {\n         \n      setLiteData(liteDta)\n     \n  })\n  },[])\n  \n  const handleInput = (e) => {\n    e.preventDefault()\n    setPhone(e.target.value)\n    //console.log(phone)\n  }\nconst toggleButtonState = async(e) => {\n  if(phoneDetails){setPhoneDetails([])}\n  e.preventDefault()\n  fetch('http://apilayer.net/api/validate?access_key=1fcc33e69f7fee637d15338c111fe68f&number=' + phone + '&country_code=&format=1')\n  .then(response => response.json())\n  .then((data) => {\n    \n    setPhoneDetails(phoneDetails => [...phoneDetails, data])\n     console.log('in the toggle fetch')\n  }\n  )\n};\nvar rootStyle = {\n  backgroundImage: `url(${background})`,\n  color : 'white',\n  height: '100vh',\n  width: '100vw',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  overflow: 'hidden',\n  backgroundPosition: 'center',\n  fontFamily: 'Overpass,sans-serif',\n  textAlign: 'left',\n  //alignItems: 'left',\n}\n\nvar splitScreen = {\n  display: 'flex',\n  flexDirection: 'row'\n}\n\nvar topPane = {\n  width: '50%',\n}\n\nvar bottomPane = {\n  width: '50%',\n}\n\n  return (\n    // <div className={splitScreen}>\n    //   <div style={rootStyle}>\n    //     {/* <center> */}\n    //       <div>\n    //         <h1>Number Info</h1>\n    //         <div className={topPane}>\n    //             <h5>Enter Phone Number: </h5>\n    //             <input className = \"InputBox\" value = {phone} onChange = {(e) => handleInput(e)} /> \n    //             <button className = \"ClickMeButton\" onClick={(e) => toggleButtonState(e)}> View Info! </button>\n    //         </div>\n    //       </div>\n    //       <div>\n    //         <br></br>\n    //       </div>\n    //       <div>\n    //         <ReturnDetails  csv = {highRiskData} phoneDetails = {phoneDetails} liteCsv = {liteData}/> \n    //       </div>\n    //       <div className={bottomPane}>\n    //             <h5>Enter Local Phone Number: </h5>\n    //             <input className = \"InputBox\" value = {phone} onChange = {(e) => handleInput(e)} /> \n    //             <button className = \"ClickMeButton\" onClick={(e) => toggleButtonState(e)}> View Info! </button>\n    //         </div>\n    //     {/* </center> */}\n    //   </div>\n    // </div>,\n\n    <div className='App'>\n                <h1>This is my heading</h1>\n                <SplitPane split='vertical' minSize={50} defaultSize={100}>\n                    <div>split 1</div>\n                    <div>split 2</div>\n                </SplitPane>\n            </div>\n\n  );\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
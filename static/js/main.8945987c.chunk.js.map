{"version":3,"sources":["components/ProcessCsv.js","components/ReturnDetails.js","BandwidthHighRiskBlock.csv","background-globe-animated.svg","App.js","reportWebVitals.js","index.js"],"names":["ProcessCsv","props","console","log","details","dta","high","d","includes","Prefix","ReturnDetails","csv","phoneDetails","rootStyle","background","color","overflow","width","fontFamily","textAlign","alignItems","map","phoneDetail","className","style","class","number","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString","App","useState","phone","setPhone","setPhoneDetails","csvData","setCsvData","useEffect","d3","data","then","toggleButtonState","e","a","preventDefault","fetch","response","json","backgroundImage","height","backgroundSize","backgroundRepeat","backgroundPosition","value","onChange","target","handleInput","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8945987c.chunk.js","sourcesContent":["import React from 'react';\r\n//import * as d3 from 'd3';\r\n//import data from \"../test.csv\";\r\n   \r\n    function ProcessCsv(props) {\r\n       console.log('process')\r\n\r\n       const {details, dta} = props\r\n       let high = false\r\n     \r\n         for (let d of dta) {\r\n             //console.log(dta)\r\n             //console.log(d)\r\n             if (details.includes(\"+\" + d.Prefix)) {\r\n                high = true\r\n                break;\r\n             }\r\n             else {\r\n               //console.log('csv')\r\n             }\r\n         }\r\n\r\n        if(high) {return   <p>High Risk: Yes</p>;    }\r\n\r\n        else{return <p>High Risk: No</p>;  }\r\n    \r\n        }\r\n\r\n export default ProcessCsv","//import React, {useState, useCallback} from 'react';\nimport React from 'react';\nimport ProcessCsv from './ProcessCsv';\n//import background from \"../ReactBackground.gif\"\n\n\n\n   function ReturnDetails(props)  {\n\n   \n        \n        const { csv, phoneDetails} = props\n        var rootStyle = {\n            //backgroundImage: `url(${background})`,\n            background: \"#fffff2\",\n            color : '#AC3B61',\n            //height: '100vh',\n            //backgroundSize: 'cover',\n            overflow: 'hidden',\n            width: '400px',\n            fontFamily: 'Overpass,sans-serif',\n            textAlign: 'left',\n            alignItems: 'left',\n          }\n    \n         return (\n            <div key=\"index\">\n                \n                { phoneDetails ? phoneDetails.map((phoneDetail) => (\n                \n                <div className=\"card\" style={rootStyle}>\n                    <div class=\"card-body\">\n                    <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                    <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                    <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                    <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                    <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                    <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                    <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                    <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                    <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                    \n                     <div><ProcessCsv details = {phoneDetail.international_format.toString()} dta = {csv} /> </div> \n                   \n                    </div>\n                </div> \n                )) : console.log('no map')}\n        </div>\n                )\n                }\n               \n\n\nexport default ReturnDetails","export default __webpack_public_path__ + \"static/media/BandwidthHighRiskBlock.ebc16346.csv\";","export default __webpack_public_path__ + \"static/media/background-globe-animated.1300d578.svg\";","\nimport React, {useState, useEffect} from 'react';\nimport ReturnDetails from './components/ReturnDetails';\n//import useNumberDetails from './components/useNumberDetails';\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport background from \"./background-globe-animated.svg\"\nimport \"./App.css\";\n\nfunction App(){\n  \n  const [phone, setPhone]= useState()\n  const [phoneDetails, setPhoneDetails] = useState([])\n  const [csvData, setCsvData] = useState([])\n\n  useEffect(()=> {\n    d3.csv(data).then(function(dta) {\n         \n      setCsvData(dta)\n     \n  })\n  },[])\n  \n  const handleInput = (e) => {\n    e.preventDefault()\n    setPhone(e.target.value)\n    //console.log(phone)\n  }\nconst toggleButtonState = async(e) => {\n  if(phoneDetails){setPhoneDetails([])}\n  e.preventDefault()\n  fetch('http://apilayer.net/api/validate?access_key=1fcc33e69f7fee637d15338c111fe68f&number=' + phone + '&country_code=&format=1')\n  .then(response => response.json())\n  .then((data) => {\n    \n    setPhoneDetails(phoneDetails => [...phoneDetails, data])\n     console.log('in the toggle fetch')\n  }\n  )\n};\nvar rootStyle = {\n  backgroundImage: `url(${background})`,\n  color : 'white',\n  height: '100vh',\n  width: '100vw',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  overflow: 'hidden',\n  backgroundPosition: 'center',\n  fontFamily: 'Overpass,sans-serif',\n  textAlign: 'left',\n  //alignItems: 'left',\n}\n\n  return (\n    <div style={rootStyle}>\n      <center>\n        <div>\n          <h1>Number Info</h1>\n          <p><h5>Enter Phone Number: </h5><input className = \"InputBox\" value = {phone} onChange = {(e) => handleInput(e)} /> \n          <button className = \"ClickMeButton\" onClick={(e) => toggleButtonState(e)}> View Info! </button> </p>\n        </div>\n        <div>\n          <br></br>\n        </div>\n        <div>\n          <ReturnDetails  csv = {csvData} phoneDetails = {phoneDetails} /> \n        </div>\n      </center>\n    </div>\n  );\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
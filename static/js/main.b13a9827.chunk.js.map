{"version":3,"sources":["App.js","BandwidthHighRiskBlock.csv","components/phoneDetails.js","reportWebVitals.js","index.js"],"names":["phoneNumber","PhoneDetails","phoneDetails","useState","test","setTest","ProcessCsv","props","d3","data","then","d","number","includes","Prefix","console","log","map","phoneDetail","class","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString","App","toggleButtonState","state","phone","param","url","fetch","fetchAPI","response","json","arr","setState","handleChange","bind","e","this","target","value","type","onChange","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IAmFIA,E,uGCnFW,MAA0B,mD,OCuE1BC,EApEM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEpB,EAAwBC,mBAAS,QAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,SAASC,EAAWC,GA8BhB,OAjBAC,IAAOC,GAAMC,MAAK,SAASD,GAAO,IAAD,gBACfA,GADe,IAC7B,2BAAoB,CAAC,IAAZE,EAAW,QAChB,GAAIJ,EAAMK,OAAOC,SAAS,IAAMF,EAAEG,QAAS,CACvCC,QAAQC,IAAI,aACZ,MAIAX,EAAQ,SARa,8BAa7BU,QAAQC,IAAI,sBAAwBZ,MAGxCW,QAAQC,IAAI,yBAA2BZ,GAC1B,SAATA,GACAW,QAAQC,IAAI,uBAAyBZ,GAC9B,yDAA4BA,OAGnCW,QAAQC,IAAI,yBAA2BZ,GAChC,2DAA8BA,MAG7C,OACI,gCACI,iCAAQ,+CACPF,EAAae,KAAI,SAACC,GAAD,OAClB,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,UACA,oBAAGA,MAAM,YAAT,qBAA8BD,EAAYN,UAC1C,oBAAGO,MAAM,YAAT,2BAAoCD,EAAYE,gBAChD,oBAAGD,MAAM,YAAT,mCAA4CD,EAAYG,wBACxD,oBAAGF,MAAM,YAAT,6BAAsCD,EAAYI,kBAClD,oBAAGH,MAAM,YAAT,2BAAoCD,EAAYK,gBAChD,oBAAGJ,MAAM,YAAT,2BAAoCD,EAAYM,gBAChD,oBAAGL,MAAM,YAAT,uBAAgCD,EAAYO,YAC5C,oBAAGN,MAAM,YAAT,sBAA+BD,EAAYQ,WAC3C,oBAAGP,MAAM,YAAT,wBAAiCD,EAAYS,aAG7C,oCAAM,cAACrB,EAAD,CAAYM,OAAQM,EAAYG,qBAAqBO,aAA3D,iBAhBC,UF4CV,IAyDQC,EAzDf,kDACE,aAAe,IAAD,8BACZ,gBAqBFC,kBAAoB,WAClBf,QAAQC,IAAI,gBAAkB,EAAKe,MAAMC,OACzChC,EAAc,EAAK+B,MAAMC,MACzBjB,QAAQC,IAAI,gBAAkBhB,GAhClC,SAAkBiC,GAChB,IAAIC,EAAM,uFAAyFD,EAAQ,0BAE3G,OADAlB,QAAQC,IAAIkB,GACLC,MAAOD,GAoCZE,CAASpC,GACRU,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,UAC1B5B,MAAK,SAACD,GACL,IAAM8B,EAAM,CAAC9B,GACZ,EAAK+B,SAAS,CAAEtC,aAAcqC,QAlCjC,EAAKR,MAAQ,CACX7B,aAAc,GACd8B,MAAO,MAET,EAAKS,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKZ,kBAAoB,EAAKA,kBAAkBY,KAAvB,gBAPb,EADhB,gDAmBE,SAAcC,GACZC,KAAKJ,SAAS,CAACR,MAAOW,EAAEE,OAAOC,UApBnC,oBA4CI,WACE,OACE,gCACE,+CAAqB,uBAAOC,KAAK,OAAOC,SAAYJ,KAAKH,eACzD,wBAAQQ,QAASL,KAAKd,kBAAtB,wBACA,cAAC,EAAD,CAAc5B,aAAc0C,KAAKb,MAAM7B,sBAjDjD,GAAyBgD,aG/EVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b13a9827.chunk.js","sourcesContent":["/*\nimport React, {Component} from 'react';\nimport PhoneDetails from './components/phoneDetails';\n\n\nclass App extends Component {\n  state = {\n    phoneDetails: []\n  }\n  //state = { name: '' };\n\n  componentDidMount() {\n    fetch('http://apilayer.net/api/validate?access_key=799b6b058858fbf11920dbc603e34094&number=919898042011&country_code=&format=1')\n    .then(res => res.json())\n    .then((data) => {\n      const arr = [data];\n       this.setState({ phoneDetails: arr })\n    }\n    )\n    .catch(console.log)\n  }\n\n  render () {\n    return (\n      // <div>\n      //           Enter your name: <input type=\"text\" value=   {this.state.name} onChange={e => this.setState({ name:e.target.value })} />\n      //           <div>Hi {this.state.name}!</div>\n                <PhoneDetails phoneDetails={this.state.phoneDetails} /> \n      //</div>\n    );\n  }\n}\n\nexport default App;\n//-----------------------------------------------------------------------------------------------\n*/\n\n/*\nimport React, {Component} from 'react';\n\nlet phoneNumber;\n\nexport class App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      phone: '',\n      countryPrefix: ''\n    }\n    this.handlechange = this.handlechange.bind(this);\n  }\n\n  handlechange(e) {\n    phoneNumber = this.state.phone;\n    const accessKey = '799b6b058858fbf11920dbc603e34094';\n      fetch('http://apilayer.net/api/validate?access_key=799b6b058858fbf11920dbc603e34094&number=17754127163&country_code=&format=1')\n      .then(response => response.json())\n      // .then(data => this.setState({\n      //   countryPrefix: data['country_prefix']\n      //   }) )\n      .then ((response) => {\n        console.log(response);\n      })\n      //.catch(error => console.log('failed to fetch', error));\n    this.setState({phone: e.target.value});\n  }\n  componentDidMount() {\n  \n  }\n\n  render() {\n    return(\n    <div>\n      <p>Phone Number: </p><input type='text' onChange={this.handlechange}/>\n      <h1> Your phone number is {this.state.phone} and countryPrefix is {this.state.countryPrefix}</h1>\n    </div>);\n  }\n}\n  export default App;\n*/\n\nimport React, {Component} from 'react';\nimport PhoneDetails from './components/phoneDetails';\nlet phoneNumber;\n\nfunction fetchAPI(param) {\n  var url = 'http://apilayer.net/api/validate?access_key=799b6b058858fbf11920dbc603e34094&number=' + param + '&country_code=&format=1';\n  console.log(url);\n  return fetch (url);\n}\n\nexport class App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      phoneDetails: [],\n      phone: null\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleButtonState = this.toggleButtonState.bind(this);\n  }\n \n  /*\n  handleChange ({target}) {\n    this.setState({\n      [target.name] : target.value\n    });\n  }\n  */\n\n  handleChange (e) {\n    this.setState({phone: e.target.value});\n  }\n\n  toggleButtonState = () => {\n    console.log(\"state phone: \" + this.state.phone);\n    phoneNumber = this.state.phone;\n    console.log(\"phoneNumber: \" + phoneNumber);\n    //let selectedWord = \"17754127163\";\n          //   d3.csv(data).then(function(data) {\n          //     console.log(data)\n          //   }).catch(function(err) {\n          //     throw err;\n          // })\n    fetchAPI(phoneNumber)\n    .then(response => response.json())\n    .then((data) => {\n      const arr = [data];\n       this.setState({ phoneDetails: arr })\n    }\n    )\n    // .then(result => {\n    //   this.setState({ result });\n    // });\n  };\n    render() {\n      return (\n        <div>\n          <p>Phone Number: </p><input type='text' onChange = {this.handleChange}/>\n          <button onClick={this.toggleButtonState}> Click me </button>\n          <PhoneDetails phoneDetails={this.state.phoneDetails} /> \n        </div>\n      );\n    }\n}\n\n// ReactDOM.render(<App />, document.getElementById('container'));\n\nexport default App;","export default __webpack_public_path__ + \"static/media/BandwidthHighRiskBlock.be481541.csv\";","import React, {useState} from 'react';\nimport * as d3 from 'd3';\nimport data from \"../BandwidthHighRiskBlock.csv\";\nconst PhoneDetails = ({ phoneDetails }) => {\n\n    const [test, setTest] = useState('High')\n\n    function ProcessCsv(props) {\n        //var test = \"High\";\n        // d3.csv(data).then(function(data) {\n        //     data.some(function(d) {  \n        //         //console.log(\"+\" + d.Prefix);\n        //         if (props.number.includes(\"17754\")) {\n        //             break;\n        //         }\n        //         else {\n        //             test = \"None\";\n        //         }\n        //     });\n        // });\n        d3.csv(data).then(function(data) {\n            for (let d of data) {\n                if (props.number.includes(\"+\" + d.Prefix)) {\n                    console.log(\"inside if\");\n                    break;\n                }\n                else {\n                    //console.log(\"inside else\");\n                    setTest(\"None\");\n                    //console.log(\"inside else, test = \" + test);\n                }\n                //console.log(\"outside if/else, test = \" + test);\n            }\n            console.log(\"inside for, test = \" + test);\n            //test3 = test;\n        });\n        console.log(\"outside loop, test3 = \" + test);\n        if (test === \"High\") {\n            console.log(\"inside if2,  test = \" + test);\n            return <p>Bandwidth High Risk if: {test}</p>;\n        }\n        else {\n            console.log(\"inside else2,  test = \" + test);\n            return <p>Bandwidth High Risk else: {test}</p>;\n        }\n    }\n    return (\n        <div key=\"index\">\n            <center><h1>Number Info</h1></center>\n            {phoneDetails.map((phoneDetail) => (\n            <div class=\"card\">\n                <div class=\"card-body\">\n                <p class=\"card-text\">Number: {phoneDetail.number}</p>\n                <p class=\"card-text\">Local format: {phoneDetail.local_format}</p>\n                <p class=\"card-text\">International format: {phoneDetail.international_format}</p>\n                <p class=\"card-text\">Country prefix: {phoneDetail.country_prefix}</p>\n                <p class=\"card-text\">Country code: {phoneDetail.country_code}</p>\n                <p class=\"card-text\">Country name: {phoneDetail.country_name}</p>\n                <p class=\"card-text\">Location: {phoneDetail.location}</p>\n                <p class=\"card-text\">Carrier: {phoneDetail.carrier}</p>\n                <p class=\"card-text\">Line type: {phoneDetail.line_type}</p>\n                {/* <p class=\"card-text\">Bandwidth High Risk Prefix: {processCsv(phoneDetail.international_format)}</p> */}\n                {/* <div> {processCsv(phoneDetail.international_format)} </div> */}\n                <div> <ProcessCsv number={phoneDetail.international_format.toString()}/> </div>\n                </div>\n            </div>\n            ))}\n        </div>\n    )\n};\n\nexport default PhoneDetails","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
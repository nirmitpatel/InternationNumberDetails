{"version":3,"sources":["components/ProcessCsv.js","components/ProcessLiteCsv.js","components/ReturnDetails.js","components/ReturnLocalDetails.js","BandwidthHighRiskBlock.csv","lite.csv","background-globe-animated.svg","App.js","reportWebVitals.js","index.js"],"names":["ProcessCsv","props","console","log","details","dta","high","d","includes","Prefix","ProcessLiteCsv","number","csvFile","Country","ReturnDetails","csv","intlPhoneDetails","liteCsv","rootStyle","background","color","overflow","width","fontFamily","fontWeight","textAlign","alignItems","borderRadius","padding","map","intlPhoneDetail","className","style","valid","local_format","international_format","country_prefix","country_code","country_name","location","carrier","line_type","toString","localPhoneDetails","localPhoneDetail","hasOwnProperty","message","status_code","status_desc","BWDesc","error","eligible","result","Formatted","App","useState","localPhone","setLocalPhone","setLocalPhoneDetails","highRiskData","setHighRiskData","liteData","setLiteData","intlPhone","setIntlPhone","setIntlPhoneDetails","localLoading","setLocalLoading","intlLoading","setIntlLoading","useEffect","d3","data","then","lite","liteDta","toggleIntlButtonState","e","a","preventDefault","fetch","response","json","toggleLocalButtonState","backgroundImage","height","backgroundSize","backgroundRepeat","backgroundPosition","split","minSize","defaultSize","id","value","onChange","test","target","replace","handleLocalInput","placeholder","onClick","ReturnLocalDetails","animation","variant","handleIntlInput","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35d8c63.chunk.js","sourcesContent":["import React from 'react';\r\nfunction ProcessCsv(props) {\r\n  console.log('process')\r\n\r\n  const { details, dta } = props\r\n  let high = false\r\n\r\n  for (let d of dta) {\r\n    if (details.includes(\"+\" + d.Prefix)) {\r\n      high = true\r\n      break;\r\n    }\r\n    else {\r\n      // do nothing \r\n    }\r\n  }\r\n\r\n  if (high) { return <p>High Risk: Yes</p>; }\r\n\r\n  else { return <p>High Risk: No</p>; }\r\n\r\n}\r\n\r\nexport default ProcessCsv","import React from 'react';\r\n\r\nfunction ProcessLiteCsv(props) {\r\n  console.log('ProcessLiteCsv')\r\n\r\n  const { number, csvFile } = props\r\n  let high = false\r\n\r\n  for (let d of csvFile) {\r\n    if (number.includes(\"+\" + d.Prefix)) {\r\n      console.log('ProcessLiteCsv if: ' + d.Prefix + \" Country: \" + d.Country)\r\n      high = true\r\n      break;\r\n    }\r\n    else {\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  if (high) { return <p>INTL Lite Blocked: Yes</p>; }\r\n\r\n  else { return <p>INTL Lite Blocked: No</p>; }\r\n\r\n}\r\n\r\nexport default ProcessLiteCsv","import React from 'react';\nimport ProcessCsv from './ProcessCsv';\nimport ProcessLiteCsv from './ProcessLiteCsv';\nimport \"../App.css\";\n\n\nfunction ReturnDetails(props) {\n\n    const { csv, intlPhoneDetails, liteCsv } = props\n    var rootStyle = {\n        background: '#b3ecfb',\n        color: '#000000',\n        overflow: 'hidden',\n        width: '400px',\n        fontFamily: 'Overpass,sans-serif',\n        fontWeight: 'bold',\n        textAlign: 'left',\n        alignItems: 'left',\n        borderRadius: '20px',\n        padding: '15px 0px 0px 25px'\n    }\n\n    return (\n        <div key=\"index\">\n\n            {intlPhoneDetails ? intlPhoneDetails.map((intlPhoneDetail) => (\n\n                <div className=\"card\" key=\"index2\" style={rootStyle}>\n                    <div className=\"card-body\">\n                        {(\n                            !intlPhoneDetail.valid ?\n                                <p className=\"card-text\" style={{ 'color': 'red', 'paddingBottom': '10px'}}>ERROR: The number entered is not valid!!</p> :\n                                <>\n                                    <p className=\"card-text\">Number: {intlPhoneDetail.number}</p>\n                                    <p className=\"card-text\">Local format: {intlPhoneDetail.local_format}</p>\n                                    <p className=\"card-text\">International format: {intlPhoneDetail.international_format}</p>\n                                    <p className=\"card-text\">Country prefix: {intlPhoneDetail.country_prefix}</p>\n                                    <p className=\"card-text\">Country code: {intlPhoneDetail.country_code}</p>\n                                    <p className=\"card-text\">Country name: {intlPhoneDetail.country_name}</p>\n                                    <p className=\"card-text\">Location: {intlPhoneDetail.location}</p>\n                                    <p className=\"card-text\">Carrier: {intlPhoneDetail.carrier}</p>\n                                    <p className=\"card-text\">Line type: {intlPhoneDetail.line_type}</p>\n\n                                    <div>\n                                        <ProcessCsv details={intlPhoneDetail.international_format.toString()} dta={csv} />\n                                    </div>\n                                    <div>\n                                        <ProcessLiteCsv number={intlPhoneDetail.international_format.toString()} csvFile={liteCsv} />\n                                    </div>\n                                </>\n                        )}\n                    </div>\n                </div>\n            )) : console.log('no map')}\n        </div>\n    )\n}\n\n\n\nexport default ReturnDetails","import React from 'react';\nimport \"../App.css\";\n\nfunction ReturnDetails(props) {\n\n    const { localPhoneDetails } = props\n    var rootStyle = {\n        background: '#b3ecfb',\n        color: '#000000',\n        overflow: 'hidden',\n        width: '400px',\n        fontFamily: 'Overpass,sans-serif',\n        fontWeight: 'bold',\n        textAlign: 'left',\n        alignItems: 'left',\n        borderRadius: '20px',\n        padding: '15px 0px 15px 25px'\n    }\n\n    return (\n        <div key=\"index\">\n\n            {localPhoneDetails ? localPhoneDetails.map((localPhoneDetail) => (\n                \n                <div className=\"card\" key=\"index2\" style={rootStyle}>\n                    <div className=\"card-body\">\n                        {\n                            (\n                                localPhoneDetail.hasOwnProperty ('message') ?\n                                    <p className=\"card-text\" style={{ 'color': 'red', 'paddingRight': '10px' }}>ERROR: {localPhoneDetail.message}</p> :\n                                    localPhoneDetail.hasOwnProperty('transaction_id') ?\n                                        <>\n                                            <p className=\"card-text\">Status Code: {localPhoneDetail.status_code}</p>\n                                            <p className=\"card-text\">Status Desc: {localPhoneDetail.status_desc}</p>\n                                            <p className=\"card-text\">BW Desc: {localPhoneDetail.BWDesc}</p>\n                                            <p className=\"card-text\">Error: {localPhoneDetail.error}</p>\n                                            <p className=\"card-text\">Eligible: {localPhoneDetail.eligible}</p>\n                                        </>\n                                        :\n                                    <>\n                                        <p className=\"card-text\">E164 Number: {localPhoneDetail.result[0][\"E.164 Format\"]}</p>\n                                        <p className=\"card-text\">Formatted Number: {localPhoneDetail.result[0].Formatted}</p>\n                                        <p className=\"card-text\">Country name: {localPhoneDetail.result[0].Country}</p>\n                                        <p className=\"card-text\">Line type: {localPhoneDetail.result[0][\"Line Type\"]}</p>\n                                        <p className=\"card-text\">Carrier: {localPhoneDetail.result[0][\"Line Provider\"]}</p>\n                                    </>\n                            )\n                        }\n                    </div>\n                </div> )\n            ) : console.log('no map')}\n        </div>\n    )\n}\n\n\n\nexport default ReturnDetails","export default __webpack_public_path__ + \"static/media/BandwidthHighRiskBlock.924e58a4.csv\";","export default __webpack_public_path__ + \"static/media/lite.0a44dd3f.csv\";","export default __webpack_public_path__ + \"static/media/background-globe-animated.1300d578.svg\";","import React, { useState, useEffect } from 'react';\nimport ReturnDetails from './components/ReturnDetails';\nimport ReturnLocalDetails from './components/ReturnLocalDetails';\nimport * as d3 from 'd3';\nimport data from \"./BandwidthHighRiskBlock.csv\";\nimport lite from \"./lite.csv\";\nimport background from \"./background-globe-animated.svg\"\nimport \"./App.css\";\nimport SplitPane from 'react-split-pane'\nimport * as ReactBootStrap from 'react-bootstrap';\n\nfunction App() {\n\n  const [localPhone, setLocalPhone] = useState('')\n  const [localPhoneDetails, setLocalPhoneDetails] = useState([])\n  const [highRiskData, setHighRiskData] = useState([])\n  const [liteData, setLiteData] = useState([])\n  const [intlPhone, setIntlPhone] = useState('')\n  const [intlPhoneDetails, setIntlPhoneDetails] = useState([])\n  const [localLoading, setLocalLoading] = useState(true)\n  const [intlLoading, setIntlLoading] = useState(true)\n\n  useEffect(() => {\n    d3.csv(data).then(function (dta) {\n\n      setHighRiskData(dta)\n\n    })\n  }, [])\n\n  useEffect(() => {\n    d3.csv(lite).then(function (liteDta) {\n\n      setLiteData(liteDta)\n\n    })\n  }, [])\n\n  const handleLocalInput = (e) => {\n    e.preventDefault()\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n    setLocalPhone(e.target.value)\n  }\n  const handleIntlInput = (e) => {\n    e.preventDefault()\n    if (/\\D/g.test(e.target.value)) {\n      e.target.value = e.target.value.replace(/\\D/g, '');\n    }\n    setIntlPhone(e.target.value)\n  }\n  const toggleIntlButtonState = async (e) => {\n    if (intlPhoneDetails) { setIntlPhoneDetails([]) }\n    e.preventDefault()\n    setIntlLoading(false);\n    await fetch('https://karh5qw55m.execute-api.us-east-2.amazonaws.com/test/intlnumlookup?phone=' + intlPhone)\n      .then(async response => response.json())\n      .then((data) => {\n        setIntlPhoneDetails(intlPhoneDetails => [...intlPhoneDetails, data])\n      }\n    )\n    setIntlLoading(true);\n  };\n  const toggleLocalButtonState = async (e) => {\n\n    if (localPhoneDetails) { setLocalPhoneDetails([]) }\n    e.preventDefault()\n    setLocalLoading(false);\n    await fetch('https://0xi9lxezba.execute-api.us-east-2.amazonaws.com/test/tnlookup?number=' + localPhone)\n      .then(async response => response.json())\n      .then((data) => {\n        setLocalPhoneDetails(localPhoneDetails => [...localPhoneDetails, data])\n      }\n      )\n    setLocalLoading(true);\n  };\n  var rootStyle = {\n    backgroundImage: `url(${background})`,\n    color: 'white',\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    overflow: 'hidden',\n    backgroundPosition: 'center',\n    fontFamily: 'Overpass,sans-serif',\n    textAlign: 'left'\n  }\n\n  return (\n    <div className='App' style={rootStyle}>\n      <center>\n        <h1>Number Lookup Tool</h1>\n        <SplitPane split='vertical' minSize='50%' defaultSize='50%'>\n          <div>\n            {/* <h2 className=\"localTitle\">Local Number Search</h2> */}\n            <h2>Local Number Search</h2>\n            <div>\n              <h5>Enter Local Phone Number: </h5>\n              <input id = \"local\" className=\"InputBox\" value={localPhone} onChange={(e) => handleLocalInput(e)} placeholder=\"1XXXXXXXXXX\" />\n              <button className=\"ClickMeButton\" onClick={(e) => toggleLocalButtonState(e)}> View Info! </button>\n            </div>\n            <div>\n              <br></br>\n            </div>\n            <div>\n              {localLoading ? <ReturnLocalDetails localPhoneDetails={localPhoneDetails} /> :\n                <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n            </div>\n          </div>\n          <div>\n            {/* <h2 className=\"intlTitle\">International Number Search</h2> */}\n            <h2>International Number Search</h2>\n            <div>\n              <h5>Enter International Phone Number: </h5>\n              <input className=\"InputBox\" value={intlPhone} onChange={(e) => handleIntlInput(e)} placeholder=\"44XXXXXXXXX\" />\n              <button className=\"ClickMeButton\" onClick={(e) => toggleIntlButtonState(e)}> View Info! </button>\n            </div>\n            <div>\n              <br></br>\n            </div>\n            <div>\n              {intlLoading ? <ReturnDetails csv={highRiskData} intlPhoneDetails={intlPhoneDetails} liteCsv={liteData} /> :\n                <ReactBootStrap.Spinner animation=\"border\" variant=\"info\" />}\n            </div>\n          </div>\n        </SplitPane></center>\n    </div>\n\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <LoadingIndicator /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}